const utils = require("../utils");
// const models = require("../models");
// const bodyParser = require("body-parser");

const model = 'Room'
const view = '_template'
const route = 'template'

// #########################################################################################
// #########################################################################################
// #########################################################################################
//  #####  ####### #######          #    #       #       
// #     # #          #            # #   #       #       
// #       #          #           #   #  #       #       
// #  #### #####      #    ##### #     # #       #       
// #     # #          #          ####### #       #       
// #     # #          #          #     # #       #       
//  #####  #######    #          #     # ####### ####### 
// #########################################################################################
// #########################################################################################
// #########################################################################################


exports.getAll = async(req,res) => {
	
    let options = {
        model: model,
        search_type: "find"
    }

    try{
        let data = await utils.queries.find(options)
   

        res.render(view+"/index", {data:data[0]});
    }
    catch(err){
        console.log(err)
        req.flash("error", "There was an error trying to get "+model+" data");
        res.redirect("/")        
    }	
};

// #########################################################################################
// #########################################################################################
// #########################################################################################
//  #####  ####### ####### 
// #     # #          #    
// #       #          #    
// #  #### #####      #    
// #     # #          #    
// #     # #          #    
//  #####  #######    #  
// #########################################################################################
// #########################################################################################
// #########################################################################################

exports.get = async(req,res) => {

    let id = req.params.id;
	
    let options = {
        model: model,
        search_type: "find",
        where: {
                _id: id,
        },
        // include: databaseQueriesUtil.searchType['Full Report'].include			      
    }

    try{
        let data = await utils.queries.find(options)
   

        res.render(view+"/show", {data:data[0]});
    }
    catch(err){
        console.log(err)
        req.flash("error", "There was an error trying to get "+model+" data");
        res.redirect("/")        
    }	
};


// #########################################################################################
// #########################################################################################
// #########################################################################################
//  #####  ####### #######       ####### ####### ######  #     #        #####  ######  #######    #    ####### ####### 
// #     # #          #          #       #     # #     # ##   ##       #     # #     # #         # #      #    #       
// #       #          #          #       #     # #     # # # # #       #       #     # #        #   #     #    #       
// #  #### #####      #    ##### #####   #     # ######  #  #  # ##### #       ######  #####   #     #    #    #####   
// #     # #          #          #       #     # #   #   #     #       #       #   #   #       #######    #    #       
// #     # #          #          #       #     # #    #  #     #       #     # #    #  #       #     #    #    #       
//  #####  #######    #          #       ####### #     # #     #        #####  #     # ####### #     #    #    ####### 
// #########################################################################################
// #########################################################################################
// #########################################################################################

exports.getFormCreate = (req,res) => {
	res.render(view+"/new");
};


// #########################################################################################
// #########################################################################################
// #########################################################################################
//  #####  ######  #######    #    ####### ####### 
// #     # #     # #         # #      #    #       
// #       #     # #        #   #     #    #       
// #       ######  #####   #     #    #    #####   
// #       #   #   #       #######    #    #       
// #     # #    #  #       #     #    #    #       
//  #####  #     # ####### #     #    #    ####### 
// #########################################################################################
// #########################################################################################
// #########################################################################################

exports.create = async(req,res) => {
	

	try{
        let params
        
        if(req.query){
            params = req.query
        }
        //IF A JSON BODY IS PASSED, USE THAT INSTEAD 
        if(req.body){
            params = req.body
        }    
		// params["owner"] = req.session.passport.user.id


		let options = {
			model: model,
			params: params
        }

		let data = await utils.queries.create(options)	
		if(data[0]){
			res.redirect("/"+route+"/" +data[0].id);
		}
        else{
            req.flash("error", "cannot create "+model+" that has the same name as an existing "+model+". Please choose another name");
            res.redirect("/"+route+"/");            
        }
	}
	catch(err){
		console.log(err)
		req.flash("error", "There was an error trying to create your report");
		res.redirect("/"+route+"/");   
	}	


};


// #########################################################################################
// #########################################################################################
// #########################################################################################
//  #####  ####### #######       ####### ######  ### ####### 
// #     # #          #          #       #     #  #     #    
// #       #          #          #       #     #  #     #    
// #  #### #####      #    ##### #####   #     #  #     #    
// #     # #          #          #       #     #  #     #    
// #     # #          #          #       #     #  #     #    
//  #####  #######    #          ####### ######  ###    #   
// #########################################################################################
// #########################################################################################
// #########################################################################################


exports.getEdit = async(req,res) => {

	let id = req.params.id;

    try {
        let options = {
            model: model,
            search_type: "find",
            where: {
                    _id: id,
            },
        }

        //GET THE EDITABLE ITEM, INCLUDING ANY JOINS
		let data = await utils.queries.find(options)

		res.render(view+"/edit", {data:data[0]});
	}
	catch(err){
		console.log(err)
		req.flash("error", "There was an error trying to edit your report");
		res.redirect("/"+route+"/"+ id)        
	}	

};


// #########################################################################################
// #########################################################################################
// #########################################################################################
// #     # ######  ######     #    ####### ####### 
// #     # #     # #     #   # #      #    #       
// #     # #     # #     #  #   #     #    #       
// #     # ######  #     # #     #    #    #####   
// #     # #       #     # #######    #    #       
// #     # #       #     # #     #    #    #       
//  #####  #       ######  #     #    #    ####### 
// #########################################################################################
// #########################################################################################
// #########################################################################################

exports.update= async(req,res) => {
	
    let id = req.params.id;
    let params;
    if(req.query){
        params = req.query
    }
    //IF A JSON BODY IS PASSED, USE THAT INSTEAD 
    if(req.body){
        params = req.body
    }    
	
	try {
        let options = {
            model: model,
            search_type: "find",
            where: {
                    _id: id,
            },
        }

        //GET THE EDITABLE ITEM, INCLUDING ANY JOINS
		let data = await utils.queries.find(options)

		//UPDATE THE RECORD
		data = await utils.queries.update(data[0][0], params)
		res.redirect("/"+route+"/" +id)
	}	
	catch(err){
		console.log(err)
		req.flash("error", "There was an error trying to update your report");
		res.redirect("/"+route+"/"+ id)        
	}	
};



// #########################################################################################
// #########################################################################################
// #########################################################################################
// ######  ####### #       ####### ####### ####### 
// #     # #       #       #          #    #       
// #     # #       #       #          #    #       
// #     # #####   #       #####      #    #####   
// #     # #       #       #          #    #       
// #     # #       #       #          #    #       
// ######  ####### ####### #######    #    #######
// #########################################################################################
// #########################################################################################
// #########################################################################################


exports.delete = async(req,res) => {
	
	let id = req.params.id;
	
	try {

        let options = {
            model: model,
            search_type: "find",
            where: {
                    _id: id,
            },
        }

		//GET DATA
		let deletions = await utils.queries.destroy(options)

		res.redirect("/"+route+"/")
	}	
	catch(err){
		console.log(err)
		req.flash("error", "There was an error trying to update your report");
		res.redirect("/"+route+"/"+ id)        
	}		

};

